<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HelloWorld</title>
      <link href="/2019/12/30/helloworld/"/>
      <url>/2019/12/30/helloworld/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>UMG屏幕适配</title>
      <link href="/2018/01/22/ue01/"/>
      <url>/2018/01/22/ue01/</url>
      
        <content type="html"><![CDATA[<h4 id="一：设计分辨率的选择"><a href="#一：设计分辨率的选择" class="headerlink" title="一：设计分辨率的选择"></a>一：设计分辨率的选择</h4><p>从Android和IOS平台的主流机型宽阔比来看，分布在16:9到19.5:9之间,  采取高度充满，宽度动态适配.<br>采用的策略类似适配4的方式 (见常用的适配策略) 能够兼容这个区间的分辨率；根据当下主流设备的分<br>辨率，美术设计画质要求，美术资源的内存占用这是三个方面，把设计分辨率定为1624 * 750, 基本能<br>够保证UI的品质和内存占用合理. IPAD是12:9的比例，超出了这个范围，其实就需要UI设计的功能对具<br>体的功能进行从新设计UI 布局，王者荣耀的背包界面会为IPAD 定制.2019主流机型信息：<br>IOS1，Android2<br><img src="1.png" alt="enter description here"><br><img src="2.png" alt="enter description here"></p><h4 id="二：适配的方式UI安全区域适配"><a href="#二：适配的方式UI安全区域适配" class="headerlink" title="二：适配的方式UI安全区域适配"></a>二：适配的方式UI安全区域适配</h4><p>UI布局会分两层, 上层UI动态安全区域，下层是背景层，背景层居中，屏幕宽度变化时会自动裁剪视图，<br>当然如果屏幕太宽超出来了19.5:9的比例，那么就需要背景图片重新设计来满足宽图的需要，保证不会<br>出现两边黑屏的情况;图三我们把设计分辨率的高设置为750, 当比例为19,5:9的时，宽度为1624；如果<br>遇到水滴屏或者刘海屏之类，UI的安全区域会动态设置为1464<em> 750, 两边margin 80个像素来做适配.<br>如果遇到16:9的屏幕，UI的安全区域会动态设置为1334 </em> 750,  那么安全区域的UI元素就需要UI 设计<br>师来说明控件的锚点和对齐方式信息，对于UI安全区域下的背景择根据屏幕的宽度进行裁剪. 保证在<br>极端的情况都能显示出来控件和背景。<br><img src="3.png" alt="enter description here"><br><img src="4.png" alt="enter description here"></p><h4 id="三：适配的细节"><a href="#三：适配的细节" class="headerlink" title="三：适配的细节"></a>三：适配的细节</h4><p>  1.字体适配UE4DPI默认显示为96DPI, PSDPI默认图片显示为72DPI</p><blockquote><p>The font size is a measure in point values. The conversion of points&gt; to Slate Units is done at 96<br>dpi. So if you’re using a tool like Photoshop to prototype layouts and UI mock ups, be sure to change<br> thedefault dpi measurements from 72 dpi to 96 dpi.</p></blockquote><p> 所以设置字体具体字号的方式：UE4_FontSize = PS_72DPI_FontSize * 72DPI/96DPI / UE4_96DPI_Scale     </p><p> 2.锚点和ScaleBox的使用<br> 美术在制作的时会说明布局的时候锚点的信息，按照美术的建议走，基本上没有什么大问题.<br> ScaleBox:用于所需大小放置内容，如果需要对背景图像缩放填充某个区域，但又不希望高宽比不同而<br> 失真使用此即可</p><p>3.DPI Scaling可根据设置的规则来影响UMG的缩放，和UIScale 有同样的作用<br>UMG界面随着窗口最短的一个边的拉伸或者缩短而放大或缩小。<br>我们在设置界面可以设置5种规则。<br>最短边       （ShortestSide） -该选项将基于窗口的最短边来评估缩放曲线（最常用的设置）。<br>最长边       （LongsetSide）  -基于窗口的最长边来评估缩放曲线。<br>水平           （Horizontal）    -基于窗口的 X 轴来评估缩放曲线。<br>垂直           （vertical）         -基于窗口的 Y 轴来评估缩放曲线。<br>用户自定义（Custom）        -用户自定义规则。<br>最小曲线（SmallestCurve） -同时基于XY两个轴来评估缩放曲线。<br><img src="5.png" alt="enter description here"></p><p>4.内容缩放系数<br>移动内容缩放系数是一种缩放项目分辨率的方式，以便最佳匹配用于查看项目的移动设备的屏幕分辨率。<br>您可创建并存储多个设备的配置文件，方法是在项目配置文件夹中新建一个名为 DefaultDeviceProfiles<br>.INI 的 .INI 文件。在这个文件内，您可通过输入以下命令来指定对项目分辨率所作的更改。</p><p>在对 iOS 设备使用移动内容缩放系数时，在 r.MobileContentScaleFactor 后面输入以下数字将产生以下<br>结果。 请注意：任何非 0 缩放系数的实际分辨率都将被修正，以匹配屏幕纵横比，并固定至原始分辨率。</p><p>iOS 缩放系数直接与苹果的缩放系数系统相关。<br>r.MobileContentScaleFactor 0.0：将使用设备的原始分辨率。<br>r.MobileContentScaleFactor 1.0：在 Retina 设备上采用非 Retina 分辨率。<br>r.MobileContentScaleFactor 2.0：在 iPhone 5S 和 iPad Air 等设备上采用全原始分辨率。<br>r.MobileContentScaleFactor 3.0：iPhone 6+ 的全原始分辨率。</p><p>在对安卓设备使用移动内容缩放系数时，在 r.MobileContentScaleFactor 后面输入以下数字将产生以下结<br>果。 请注意：任何非 0 缩放系数的实际分辨率都将被修正，以匹配屏幕纵横比，并固定至原始分辨率。<br>r.MobileContentScaleFactor 0.0：将使用设备的原始分辨率。<br>r.MobileContentScaleFactor 1.0：将尝试为您提供横向 1280 x 720 分辨率，纵向 720 x 1280 分辨率。<br>r.MobileContentScaleFactor 2.0：将尝试为您提供横向 2560 x 1440 分辨率，纵向 1440 x 2560 分辨率。</p><p>四：常用的适配规则(参考的Cocos2dx)<br><img src="6.png" alt="enter description here"><br><img src="7.png" alt="enter description here"><br><img src="8.png" alt="enter description here"></p><p> 适配没有最优的解决方案，具体问题具体分析，先确定好适配策略，在策略确定的情况下，去规范锚点<br> 的使用，规范美术的设计尽量在设计和制作的时候，考虑一下适配的兼容性.</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
